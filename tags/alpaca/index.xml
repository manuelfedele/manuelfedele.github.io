<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>alpaca on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/alpaca/</link>
    <description>Recent content in alpaca on Git Push and Run</description>
    <image>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 15 Jan 2023 19:24:09 +0100</lastBuildDate><atom:link href="https://manuelfedele.github.io/tags/alpaca/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Trading With Alpaca and Golang</title>
      <link>https://manuelfedele.github.io/posts/trading-with-alpaca-and-golang/</link>
      <pubDate>Sun, 15 Jan 2023 19:24:09 +0100</pubDate>
      
      <guid>https://manuelfedele.github.io/posts/trading-with-alpaca-and-golang/</guid>
      <description>Alpaca is a popular platform for automated trading, offering APIs for accessing real-time market data and placing trades. In this article, we will discuss how to use Alpaca&amp;rsquo;s APIs with Golang, a popular programming language known for its simplicity, performance, and concurrency support.
Before we dive into the details of using Alpaca&amp;rsquo;s APIs with Golang, let&amp;rsquo;s first understand the requirements of the application.
Requirements The application should be able to connect to the Alpaca API and authenticate the user.</description>
    </item>
    
  </channel>
</rss>
