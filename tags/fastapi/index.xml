<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>fastapi on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/fastapi/</link>
    <description>Recent content in fastapi on Git Push and Run</description>
    <image>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Jan 2023 16:00:43 +0100</lastBuildDate><atom:link href="https://manuelfedele.github.io/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Protobuf With Fastapi</title>
      <link>https://manuelfedele.github.io/posts/use-protobuf-with-fastapi/</link>
      <pubDate>Wed, 04 Jan 2023 16:00:43 +0100</pubDate>
      
      <guid>https://manuelfedele.github.io/posts/use-protobuf-with-fastapi/</guid>
      <description>Protocol buffers, also known as Protobuf, are a popular data serialization format used for communication between services. They are efficient, easy to use, and language-agnostic. In this article, we will look at how to use Protobuf with FastAPI, a modern, high-performance web framework for building APIs with Python.
First, let&amp;rsquo;s start by installing the necessary dependencies. You will need to install fastapi, google-protobuf, and grpcio. You can do this by running the following command:</description>
    </item>
    
    <item>
      <title>Create a Webserver With Fastapi and Uvicorn</title>
      <link>https://manuelfedele.github.io/posts/create-webserver-with-fastapi-and-uvicorn/</link>
      <pubDate>Fri, 30 Dec 2022 14:08:35 +0100</pubDate>
      
      <guid>https://manuelfedele.github.io/posts/create-webserver-with-fastapi-and-uvicorn/</guid>
      <description>FastAPI is a modern, fast, web framework for building APIs with Python 3.7 and above. It is built on top of Starlette, a lightweight ASGI framework, and uses the uvicorn ASGI server.
Here is an example of how to create a web server with FastAPI and uvicorn:
Install FastAPI and uvicorn using pip: pip install fastapi uvicorn Create a file called main.py and import FastAPI: from fastapi import FastAPI app = FastAPI() Define a function that will be the endpoint for your API.</description>
    </item>
    
  </channel>
</rss>
