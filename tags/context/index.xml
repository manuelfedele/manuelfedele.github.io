<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Context on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/context/</link>
    <description>Recent content in Context on Git Push and Run</description>
    <image>
      <title>Git Push and Run</title>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Jan 2023 20:36:29 +0100</lastBuildDate><atom:link href="https://manuelfedele.github.io/tags/context/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Context Package</title>
      <link>https://manuelfedele.github.io/posts/the-context-package/</link>
      <pubDate>Tue, 03 Jan 2023 20:36:29 +0100</pubDate>
      
      <guid>https://manuelfedele.github.io/posts/the-context-package/</guid>
      <description>Context in Go is a type that carries a request-scoped value across API boundaries. It is designed to be used in long-lived requests, such as an HTTP server handling multiple requests over the lifetime of a process.
One of the primary use cases of context is to cancel long-running operations. For example, if an HTTP server receives a request with a cancelation token, it can use that token to cancel the request if the client closes the connection.</description>
    </item>
    
  </channel>
</rss>
