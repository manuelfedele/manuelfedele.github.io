<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Protobuf on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/protobuf/</link>
    <description>Recent content in Protobuf on Git Push and Run</description>
    <image>
      <title>Git Push and Run</title>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- 0.140.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Jan 2023 16:00:43 +0100</lastBuildDate>
    <atom:link href="https://manuelfedele.github.io/tags/protobuf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Protobuf With Fastapi</title>
      <link>https://manuelfedele.github.io/posts/use-protobuf-with-fastapi/</link>
      <pubDate>Wed, 04 Jan 2023 16:00:43 +0100</pubDate>
      <guid>https://manuelfedele.github.io/posts/use-protobuf-with-fastapi/</guid>
      <description>&lt;p&gt;Protocol buffers, also known as Protobuf, are a popular data serialization format used for communication between services. They are efficient, easy to use, and language-agnostic. In this article, we will look at how to use Protobuf with FastAPI, a modern, high-performance web framework for building APIs with Python.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s start by installing the necessary dependencies. You will need to install fastapi, google-protobuf, and grpcio. You can do this by running the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Protobuf With Golang</title>
      <link>https://manuelfedele.github.io/posts/use-protobuf-with-golang/</link>
      <pubDate>Tue, 27 Dec 2022 18:48:44 +0100</pubDate>
      <guid>https://manuelfedele.github.io/posts/use-protobuf-with-golang/</guid>
      <description>&lt;p&gt;Protocol Buffers (Protobuf) is a language- and platform-neutral data serialization format developed by Google. It allows you to define data structures in a .proto file and then use code generation tools to generate code in various languages for working with those data structures.&lt;/p&gt;
&lt;p&gt;To use Protobuf with Go, you&amp;rsquo;ll need to do the following:&lt;/p&gt;
&lt;p&gt;Install the Protobuf compiler (protoc) and the Go Protobuf plugin:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Install protoc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/protoc-3.14.0-linux-x86_64.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;unzip protoc-3.14.0-linux-x86_64.zip -d protoc3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mv protoc3/bin/* /usr/local/bin/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Install the Go Protobuf plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go get -u github.com/golang/protobuf/protoc-gen-go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Define your data structures in a .proto file. For example:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
