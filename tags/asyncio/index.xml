<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Asyncio on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/asyncio/</link>
    <description>Recent content in Asyncio on Git Push and Run</description>
    <image>
      <title>Git Push and Run</title>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- 0.139.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Jan 2023 14:50:35 +0100</lastBuildDate>
    <atom:link href="https://manuelfedele.github.io/tags/asyncio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understand Async Await in Python</title>
      <link>https://manuelfedele.github.io/posts/understand-async-await-in-python/</link>
      <pubDate>Sun, 01 Jan 2023 14:50:35 +0100</pubDate>
      <guid>https://manuelfedele.github.io/posts/understand-async-await-in-python/</guid>
      <description>&lt;p&gt;Async/await is a powerful programming construct that allows you to write asynchronous code in a synchronous-like style. It was introduced in Python 3.5 as part of the asyncio module and has become a popular choice for writing concurrent and parallel code in Python.&lt;/p&gt;
&lt;p&gt;In this post, we&amp;rsquo;ll take a look at what async/await is and how it works, as well as some of the benefits and drawbacks of using it. We&amp;rsquo;ll also see some examples of how to use async/await in Python to write efficient and scalable code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
