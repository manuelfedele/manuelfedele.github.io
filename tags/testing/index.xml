<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Testing on Git Push and Run</title>
    <link>https://manuelfedele.github.io/tags/testing/</link>
    <description>Recent content in Testing on Git Push and Run</description>
    <image>
      <title>Git Push and Run</title>
      <url>https://manuelfedele.github.io/img/card-pillow.jpg</url>
      <link>https://manuelfedele.github.io/img/card-pillow.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Jan 2023 20:49:03 +0100</lastBuildDate><atom:link href="https://manuelfedele.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit Testing in Golang</title>
      <link>https://manuelfedele.github.io/posts/unit-testing-in-golang/</link>
      <pubDate>Mon, 09 Jan 2023 20:49:03 +0100</pubDate>
      
      <guid>https://manuelfedele.github.io/posts/unit-testing-in-golang/</guid>
      <description>&lt;p&gt;Unit testing is a software testing technique in which individual units (smallest testable parts) of a software application are tested in isolation from the rest of the application. The goal of unit testing is to validate that each unit of the application is working as intended and meets the specified requirements.&lt;/p&gt;
&lt;p&gt;In Go, the testing package provides support for writing unit tests. To write unit tests, you need to create a file with a name that ends in _test.go and place it in the same package as the code you want to test. The testing package also provides a testing.T type that represents a testing context and has methods for reporting test failures and logging messages.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
